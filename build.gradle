// Configuración del plugin de Serenity
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.serenity-bdd:serenity-gradle-plugin:2.0.80'
    }
}

// Aplica plugins
apply plugin: 'java-library'
apply plugin: 'net.serenity-bdd.aggregator'

// Java Toolchain para JDK 17
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.assertj:assertj-core:3.23.1'
    implementation 'net.serenity-bdd:serenity-core:2.0.80'
    implementation 'net.serenity-bdd:serenity-junit:2.0.80'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.45'
    implementation 'io.cucumber:cucumber-java:7.11.0'
    implementation 'io.cucumber:cucumber-junit:7.11.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.11.0'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.apache.poi:poi:3.17'
    implementation 'org.apache.poi:poi-ooxml:3.17'
}

test {
    useJUnitPlatform()
    ignoreFailures = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Continúa ejecución a pesar de errores de tests
gradle.startParameter.continueOnFailure = true